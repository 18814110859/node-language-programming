// 5.1.1 内存存储
// 在第2章和第4章的例子中，内存存储被用来跟踪记录与聊天用户和任务相关的详细信息。
// 内存存储用变量存放数据。这种数据的读取和写入都很快，但就像我们在前面提过的，服务器和程序重启后数据就丢了。
// 内存存储的理想用途是存放少量经常使用的数据。
// 用来跟踪记录最近一次重启服务器后页面访问次数的计数器就是这样的应用场景。
// 比如下面这段代码，它在8888端口启动了一个服务器，并对所有请求进行计数：

var http = require('http');
var counter = 0;
var server = http.createServer(function (req, res) {
    counter++;
    res.write("Hello World!");
    res.end();
}).listen(3000);


// 5.1.2 基于文件的存储
// 基于文件的存储，用文件系统存放数据。开发人员经常用这种存储方式保存程序的配置信息，但你也可以用它做数据的持久化保存，这些数据在程序和服务器重启后依然有效。


// 基于文件的存储虽然易用，但并不是所有程序都适合。比如说，一个多用户程序如果把记录保存在一个文件中，可能会碰到并发问题。
// 两个用户可能会同时加载相同的文件进行修改。保存一个版本会覆盖另外一个，导致其中某个用户的修改丢失。
// 对于多用户程序而言，数据库管理系统是更合理的选择，因为它们就是为应对并发问题而生的。

